generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl   = env("SHADOW_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String    @id @default(cuid())
  name     String?
  username String?   @unique
  email    String?   @unique
  admin    Boolean   @default(false)
  avatar   String?
  accounts Account[]
  sessions Session[]
  projects Project[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id           String   @id @default(cuid())
  description  String
  title        String
  createdAt    DateTime @default(now())
  files        File[]
  contributors User[]
}

model File {
  url       String   @unique
  mediaType String
  width     Int
  height    Int
  projectId String?
  project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
}
